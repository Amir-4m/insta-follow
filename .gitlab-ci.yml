stages:
  - test
  - migrate
  - deploy

variables:
  PROJECT_DIR: "insta_follow"

test:
  stage: test
  before_script:
    - cp /var/www/$PROJECT_DIR/project/.env $CI_PROJECT_DIR/
    - virtualenv $CI_PROJECT_DIR/venv
    - source $CI_PROJECT_DIR/venv/bin/activate
  script:
    - pip install --no-cache-dir -r requirements.txt
    - python manage.py check
  after_script:
    - rm $CI_PROJECT_DIR/.env
  tags:
    - django

migrate:
  stage: migrate
  before_script:
    - cp /var/www/$PROJECT_DIR/project/.env $CI_PROJECT_DIR/
    - virtualenv $CI_PROJECT_DIR/venv
    - source $CI_PROJECT_DIR/venv/bin/activate
  script:
    - python manage.py makemigrations
  after_script:
    - rm $CI_PROJECT_DIR/.env
  tags:
    - django
    - staging
  only:
    changes:
      - apps/*/models.py

staging:
  stage: deploy
  variables:
    PROJECT_ABR: "instaflw"
  before_script:
    - cd /var/www/$PROJECT_DIR/project/
    - source /var/www/$PROJECT_DIR/venv/bin/activate
  script:
    - git pull
    - pip install -r requirements.txt
    - python manage.py makemigrations
    - python manage.py migrate
    - uwsgi --reload /tmp/$PROJECT_DIR-master.pid
    - supervisorctl restart $PROJECT_ABR:*
  tags:
    - django
    - staging
#  only:
#    - develop

production:
  stage: deploy
  variables:
    PROJECT_ABR: "instaflw"
  script:
    - git pull
    - pip install -r requirements.txt
    - python manage.py migrate
    - uwsgi --reload /tmp/$PROJECT_DIR-master.pid
    - supervisorctl restart $PROJECT_ABR:*
  tags:
    - django
    - release
  only:
    - master
    - tags
