stages:
  - test
  - migrate
  - deploy

variables:
  PROJECT_DIR: "insta_follow"
  PROJECT_ABR: "instaflw"

test:
  stage: test
  before_script:
    - cp /var/www/$PROJECT_DIR/project/.env $CI_PROJECT_DIR/
    - virtualenv $CI_PROJECT_DIR/venv 
    - source $CI_PROJECT_DIR/venv/bin/activate
    - pip install -r /var/www/$PROJECT_DIR/project/requirements.txt
  script:
    # - cd $CI_PROJECT_DIR 
    # - pwd
    - export
    - pip install -r requirements.txt
    - python manage.py check --deploy
  after_script:
    - rm $CI_PROJECT_DIR/.env
  only:
    variables:
      - $CI_COMMIT_REF_NAME == $BRANCH

migrate:
  stage: migrate
  before_script:
    - cp /var/www/$PROJECT_DIR/project/.env $CI_PROJECT_DIR/
    - source $CI_PROJECT_DIR/venv/bin/activate
  script:
    - python manage.py makemigrations
    - python manage.py check
  after_script:
    - rm $CI_PROJECT_DIR/.env
  only:
    - develop
      #change:
      #- apps/*/models.py 
    variables:
      - $RELEASE == "staging"
      - $CI_COMMIT_REF_NAME == $BRANCH

staging:
  stage: deploy
  before_script:
    - source /var/www/$PROJECT_DIR/venv/bin/activate
  script:
    - export
    # - git pull origin develop
    # - python manage.py makemigrations
    # - python manage.py migrate
    # - uwsgi --reload /tmp/$PROJECT_DIR-master.pid
    # - supervisorctl restart $PROJECT_ABR:*
  only:
    - develop
  variables:
    - $RELEASE == "staging"
    - $CI_COMMIT_REF_NAME == $BRANCH


production:
  stage: deploy
  script:
    - export
  only:
    - master
    # - tags
  variables:
    - $CI_COMMIT_REF_NAME == $BRANCH

